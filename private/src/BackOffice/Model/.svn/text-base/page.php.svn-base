<?php

/**
 * Model to page
 *
 * @category    src
 * @package     src\BackOffice\Model
 * @author      vietphan
 * @copyright   Copyright (c) 2013-2014 iScreenway FR/VN Inc. (http://www.iscreenway.com)
 * @license     http://www.iscreenway.com/framework/licence.php Tout droit réservé à http://www.iscreenway.com
 * @version     Release: 1.0.0
 * @filesource  http://www.iscreenway.com/framework/download.php
 * @link        http://www.iscreenway.com
 * @since       1.0
 */

namespace src\BackOffice\Model;

use \core\Model as Model;

/**
 * Model to page
 *
 * @category    src
 * @package     src\BackOffice\Model
 * @author      vietphan
 * @copyright   Copyright (c) 2013-2014 iScreenway FR/VN Inc. (http://www.iscreenway.com)
 * @license     http://www.iscreenway.com/framework/licence.php Tout droit réservé à http://www.iscreenway.com
 * @version     Release: 1.0.0
 * @filesource  http://www.iscreenway.com/framework/download.php
 * @link        http://www.iscreenway.com
 * @since       1.0
 */

class page extends Model {

    /**
     * find page with condition
     *
     * @access public
     * @return array
     */
    
    public function getPageBy($params) {
        $result = $this->orm
                         ->select(array('*'))
                         ->from($this->_sTableName)
                         ->where($params)
                         ->load();
        if ($result) {
            return $result[0];
        }
        return $result;
    }

    /**
     * create or update page
     *
     * @access public
     * @return int
     */
    
    public function createOrUpdate($params) {
        $entity = $this->entity;

        $entity->set_content($params['content']);
        $entity->set_menu_id($params['menu_id']);

        if ($params['id'] === null || $params['id'] === '') {
            return $this->insertAndGet($entity);
        } else {
            $entity->set_id($params['id']);
            return $this->updateAndGet($entity);
        }
    }
}

