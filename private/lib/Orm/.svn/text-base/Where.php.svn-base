<?php

/**
 * Orm Manager - Where part
 *
 * @category  	lib
 * @package   	lib\Orm
 * @author    	Judicaël Paquet <paquet.judicael@iscreenway.com>
 * @copyright 	Copyright (c) 2013-2014 iScreenway FR/VN Inc. (http://www.iscreenway.com)
 * @license   	http://www.iscreenway.com/framework/licence.php Tout droit réservé à http://www.iscreenway.com
 * @version   	Release: 1.0.0
 * @filesource	http://www.iscreenway.com/framework/download.php
 * @link      	http://www.iscreenway.com
 * @since     	1.0
 */

namespace lib\Orm;

/**
 * Orm Manager - Where part
 *
 * @category  	lib
 * @package   	lib\Orm
 * @author    	Judicaël Paquet <paquet.judicael@iscreenway.com>
 * @copyright 	Copyright (c) 2013-2014 iScreenway FR/VN Inc. (http://www.iscreenway.com)
 * @license   	http://www.iscreenway.com/framework/licence.php Tout droit réservé à http://www.iscreenway.com
 * @version   	Release: 1.0.0
 * @filesource	http://www.iscreenway.com/framework/download.php
 * @link      	http://www.iscreenway.com
 * @since     	1.0
 */

class Where {

	/**
	 * select of the request
	 *
	 * @access private
	 * @var    array
	 */

	private $_aElement = array();

	/**
	 * add an element && a > f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function whereSup($sElement, $mValue) {

		$this->_aElement[] = array('&&', $sElement, '>', $mValue);
		return $this;
	}

	/**
	 * add an element && a > f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function andWhereSup($sElement, $mValue) {

		return $this->whereSup($sElement, $mValue);
	}
	/**
	 * add an element || a > f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function orWhereSup($sElement, $mValue) {

		$this->_aElement[] = array('||', $sElement, '>', $mValue);
		return $this;
	}

	/**
	 * add an element && a < f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function whereInf($sElement, $mValue) {

		$this->_aElement[] = array('&&', $sElement, '<', $mValue);
		return $this;
	}

	/**
	 * add an element && a < f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function andWhereInf($sElement, $mValue) {

		return $this->whereSup($sElement, $mValue);
	}
	/**
	 * add an element || a < f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function orWhereInf($sElement, $mValue) {

		$this->_aElement[] = array('||', $sElement, '>', $mValue);
		return $this;
	}

	/**
	 * add an element && a = f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function whereEqual($sElement, $mValue) {

		$this->_aElement[] = array('&&', $sElement, '=', $mValue);
		return $this;
	}

	/**
	 * add an element && a = f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function andWhereEqual($sElement, $mValue) {

		return $this->whereEqual($sElement, $mValue);
	}
	/**
	 * add an element || a = f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function orWhereEqual($sElement, $mValue) {

		$this->_aElement[] = array('||', $sElement, '=', $mValue);
		return $this;
	}

	/**
	 * add an element && a != f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function whereNotEqual($sElement, $mValue) {

		$this->_aElement[] = array('&&', $sElement, '!=', $mValue);
		return $this;
	}

	/**
	 * add an element && a != f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function andWhereNotEqual($sElement, $mValue) {

		return $this->whereNotEqual($sElement, $mValue);
	}
	/**
	 * add an element || a != f
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function orWhereNotEqual($sElement, $mValue) {

		$this->_aElement[] = array('||', $sElement, '!=', $mValue);
		return $this;
	}

	/**
	 * where in
	 *
	 * @access public
	 * @param  array $aSelect select
	 * @return \lib\Orm
	 */

	public function whereIn($sElement, $mValue) {

		$this->_aElement[] = array('&&', $sElement, 'IN', $mValue);
		return $this;
	}

	/**
	 * prepare the request
	 *
	 * @access private
	 * @return string
	 */

	public function get() {

		$sWhere = '';

		if (count($this->_aElement) > 0) {

			foreach ($this->_aElement as $aElement) {

				if (is_string($aElement[3])) {

					$sWhere .= ' '.$aElement[0].' '.$aElement[1].' '.$aElement[2]." '".$aElement[3]."'";
				}
				elseif (is_int($aElement[3]) || is_float($aElement[3])) {

					$sWhere .= ' '.$aElement[0].' '.$aElement[1].' '.$aElement[2].' '.$aElement[3];
				} elseif (is_array($aElement[3]) && $aElement[2] == 'IN') {
					$sWhere .= ' '.$aElement[0].' '.$aElement[1].' '.$aElement[2]." (".implode(',', $aElement[3]).")";
				}
			}
		}

		return $sWhere;
	}
}
